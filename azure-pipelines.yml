#trigger:
#  - master
pool: 
    vmImage: 'ubuntu-latest'
variables:
  resourceGroup: newResourceGroup
  tfBackendStorageAccountName: azureopasademo
  tfBackendStorageContainerName: azureopacontainer
  tfBackendSAAccessKey: UK89oM4VeuQsfmvzN/olUUX+fphl3toRgrbbOUTcWoSJt1jys4310OS7468Dl4P9u4oWEHxVJF4Ox2jRCwpW5Q==
  tfBackendFileName: terraform.tfstate
stages:
- stage: Build
  jobs:
    - job: build
      steps:
        - task: TerraformInstaller@0
          inputs:
            terraformVersion: '0.14.6'
        - script: | 
                echo "running from build stage"
                cd $(System.DefaultWorkingDirectory)/Azuredemo
                terraform init -backend-config="storage_account_name=$(tfBackendStorageAccountName)" -backend-config="container_name=$(tfBackendStorageContainerName)" -backend-config="access_key=$(tfBackendSAAccessKey)" -backend-config="key=$(tfBackendFileName)"
                terraform plan -var="subscription_id=$(subscription_id)" -var="tenant_id=$(tenant_id)" -var="client_id=$(client_id)" -var="client_secret=$(client_secret)" --out -no-color tfplan.output    
                curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
                chmod 755 opa
                terraform show -json tfplan.output > tfplancomplete.json
                sudo apt-get install jq
                jq -r ".resource_changes | map ({(.address|tostring) : .}) | add" tfplancomplete.json > tfplan.json
                cat tfplan.json
                echo "#############     OPA checks         ###############" 
                ./opa eval --fail-defined --data azurerules.rego --input tfplan.json "data.azurerules.nsg_rule"
                #terraform apply "tfplan.output"
#- stage: Deploy
#  dependsOn: Build
#  jobs:
#  - deployment:
#    displayName: Dev
#    environment: Dev
#    strategy:
#     runOnce:
#        deploy: 
#           steps:
#             - script: |
#                  echo "running in deploy"
